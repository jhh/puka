# Generated by Django 3.1.6 on 2021-02-05 13:42

import django.contrib.postgres.indexes
import django.contrib.postgres.search
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("bookmarks", "0002_auto_20210204_1624"),
    ]

    trigger_create = """
        CREATE FUNCTION bookmark_trigger() RETURNS trigger as $$
        begin
            new.title_description_search :=
                setweight(to_tsvector('pg_catalog.english', coalesce(new.title, '')), 'A') ||
                setweight(to_tsvector('pg_catalog.english', coalesce(new.description, '')), 'B');
            return new;
        end
        $$ LANGUAGE plpgsql;

        CREATE TRIGGER bookmark_update BEFORE INSERT OR UPDATE
            ON bookmarks_bookmark FOR EACH ROW EXECUTE FUNCTION bookmark_trigger();
            
        -- Force triggers to run and populate the title_description_search column.
        UPDATE bookmarks_bookmark SET id = id;
    """

    trigger_drop = """
        DROP TRIGGER bookmark_update ON bookmarks_bookmark;
        DROP FUNCTION bookmark_trigger();
    """

    operations = [
        migrations.AddField(
            model_name="bookmark",
            name="title_description_search",
            field=django.contrib.postgres.search.SearchVectorField(null=True),
        ),
        migrations.AddIndex(
            model_name="bookmark",
            index=django.contrib.postgres.indexes.GinIndex(
                fields=["title_description_search"],
                name="bookmarks_b_title_d_9107af_gin",
            ),
        ),
        migrations.RunSQL(trigger_create, trigger_drop),
    ]
